(this.webpackJsonprobotmonkeybutler=this.webpackJsonprobotmonkeybutler||[]).push([[0],{12:function(e){e.exports=JSON.parse('{"tasks":{"Add to Sidebar":{"file_type":"jsx","target_file_name":"index","type":"file","inserts":{"sidebaritem":["\\t\\t\\t\\t{\\n","\\t\\t\\t\\t\\tlabel: \'Robot Monkey Butlers\',\\n","\\t\\t\\t\\t\\tpermission: \'react.robot_monkey_butlers\',\\n","\\t\\t\\t\\t\\turl: joinUrl(\\n","\\t\\t\\t\\t\\t\\torganization.slug,\\n","\\t\\t\\t\\t\\t\\t\'robotmonkeybutlers\',\\n","\\t\\t\\t\\t\\t),\\n","\\t\\t\\t\\t},\\n"]},"source_file_path":"(^_^)update","target_file_path":"lcvista/react/app/PrimaryNavBar/helpers/","enabled":true,"id":"Add to Sidebar","name":"Add to Sidebar"},"Build ListTableRow":{"file_type":"jsx","target_file_name":"RobotMonkeyButlersListTableRow","source_file_full_name_with_extension":"RobotMonkeyButlersListTableRow.jsx","type":"file","source_file_path":"lcvista/react/app/RobotMonkeyButlers/components/","target_file_path":"lcvista/react/app/RobotMonkeyButlers/components/","enabled":true,"id":"Build ListTableRow","name":"Build ListTableRow"},"Edit Form Container":{"file_type":"jsx","target_file_name":"RobotMonkeyButlerFormContainer","source_file_full_name_with_extension":"RobotMonkeyButlerFormContainer.jsx","type":"file","source_file_path":"lcvista/react/app/RobotMonkeyButlers/containers/","target_file_path":"lcvista/react/app/RobotMonkeyButlers/containers/","enabled":true,"id":"Edit Form Container","name":"Edit Form Container"},"manage startapp":{"command":"python manage.py startapp robotmonkeybutlers lcvista/robotmonkeybutlers","type":"shell_command","success_message":"FILES CREATED: Multiple files and directories created for new Django app robotmonkeybutlers","enabled":true,"id":"manage startapp","name":"manage startapp"},"register url with router":{"file_type":"py","target_file_name":"urls","type":"file","inserts":{"newroute":["router.register(r\'robotmonkeybutlers\', RobotMonkeyButlerViewSet)\\n"],"newimport":["from .endpoints.robotmonkeybutlers import RobotMonkeyButlerViewSet\\n"]},"source_file_path":"(^_^)update","target_file_path":"lcvista/api/v1/","enabled":true,"id":"register url with router","name":"register url with router"},"makemigrations permissions --empty":{"migration_filename":null,"command":"python manage.py makemigrations permissions --empty","type":"new_migration","success_message":"Migration successfully created","enabled":true,"name":"makemigrations permissions --empty","path_to_migrations":"lcvista/permissions/migrations/","id":"makemigrations permissions --empty","rename":null},"Build ListHeader":{"file_type":"jsx","target_file_name":"RobotMonkeyButlersListHeader","source_file_full_name_with_extension":"RobotMonkeyButlersListHeader.jsx","type":"file","source_file_path":"lcvista/react/app/RobotMonkeyButlers/components/","target_file_path":"lcvista/react/app/RobotMonkeyButlers/components/","enabled":true,"id":"Build ListHeader","name":"Build ListHeader"},"Edit Form":{"file_type":"jsx","target_file_name":"RobotMonkeyButlerForm","source_file_full_name_with_extension":"RobotMonkeyButlerForm.jsx","type":"file","source_file_path":"lcvista/react/app/RobotMonkeyButlers/components/","target_file_path":"lcvista/react/app/RobotMonkeyButlers/components/","enabled":true,"id":"Edit Form","name":"Edit Form"},"create viewset and serializer":{"file_type":"py","target_file_name":"robotmonkeybutlers","type":"file","source_file_path":"lcvista/api/v1/endpoints/","target_file_path":"lcvista/api/v1/endpoints/","name":"create viewset and serializer","enabled":true,"id":"create viewset and serializer","source_file_full_name_with_extension":"robotmonkeybutlers.py"},"mkdir reactapp containers":{"command":"mkdir lcvista/React/app/RobotMonkeyButlers/containers/","type":"shell_command","success_message":"DIR CREATED  : lcvista/React/app/RobotMonkeyButlers/containers/","enabled":true,"id":"mkdir reactapp containers","name":"mkdir reactapp containers"},"mkdir integration tests":{"command":"mkdir lcvista/tests/integration/robotmonkeybutlers/","type":"shell_command","success_message":"DIR CREATED  : lcvista/tests/integration/robotmonkeybutlers/","enabled":true,"id":"mkdir integration tests","name":"mkdir integration tests"},"Add React routes":{"file_type":"jsx","target_file_name":"index","type":"file","inserts":{"newroute":["\\t\\t\\t\\t\\t<Route path=\'robotmonkeybutlers\'>\\n","\\t\\t\\t\\t\\t\\t<IndexRoute components={{ main: RobotMonkeyButlersListScene, sidebar: SideNavBar }} />\\n","\\t\\t\\t\\t\\t\\t<Route onEnter={scrollToTop} path=\\"add\\" components={{ main: RobotMonkeyButlerEditScene, sidebar: SideNavBar }} />\\n\\t\\t\\t\\t\\t\\t<Route onEnter={scrollToTop} path=\\":robotMonkeyButlerId\\" components={{ main: RobotMonkeyButlerEditScene, sidebar: SideNavBar }} />\\n\\t\\t\\t\\t\\t</Route>\\n"],"newimport":["import RobotMonkeyButlersListScene from \'~/RobotMonkeyButlers/containers/RobotMonkeyButlersListScene\'\\nimport RobotMonkeyButlerEditScene from \'~/RobotMonkeyButlers/containers/RobotMonkeyButlerEditScene\'\\n"]},"source_file_path":"(^_^)update","target_file_path":"lcvista/react/app/","enabled":true,"id":"Add React routes","name":"Add React routes"},"Build ListFiltersContainer":{"file_type":"jsx","target_file_name":"RobotMonkeyButlersListFiltersContainer","source_file_full_name_with_extension":"RobotMonkeyButlersListFiltersContainer.jsx","type":"file","source_file_path":"lcvista/react/app/RobotMonkeyButlers/containers/","target_file_path":"lcvista/react/app/RobotMonkeyButlers/containers/","enabled":true,"id":"Build ListFiltersContainer","name":"Build ListFiltersContainer"},"add report file":{"file_type":"py","target_file_name":"robot_monkey_butler","type":"file","source_file_path":"lcvista/reports/reports/","target_file_path":"lcvista/reports/reports/","name":"add report file","enabled":true,"id":"add report file","source_file_full_name_with_extension":"robot_monkey_butler.py"},"add columns":{"file_type":"py","target_file_name":"robot_monkey_butler","type":"file","source_file_path":"lcvista/reports/columns/","target_file_path":"lcvista/reports/columns/","name":"add columns","enabled":true,"id":"add columns","source_file_full_name_with_extension":"robot_monkey_butler.py"},"add filters":{"file_type":"py","target_file_name":"robot_monkey_butler","type":"file","source_file_path":"lcvista/reports/filters/","target_file_path":"lcvista/reports/filters/","name":"add filters","enabled":true,"id":"add filters","source_file_full_name_with_extension":"robot_monkey_butler.py"},"add endpoint tests":{"file_type":"py","target_file_name":"test_robotmonkeybutlers","type":"file","source_file_path":"lcvista/api/v1/tests/","target_file_path":"lcvista/api/v1/tests/","name":"add endpoint tests","enabled":true,"id":"add endpoint tests","source_file_full_name_with_extension":"test_robotmonkeybutlers.py"},"add report tests":{"file_type":"py","target_file_name":"test_robot_monkey_butler","type":"file","source_file_path":"lcvista/reports/tests/","target_file_path":"lcvista/reports/tests/","name":"add report tests","enabled":true,"id":"add report tests","source_file_full_name_with_extension":"test_robot_monkey_butler.py"},"mkdir reactapp helpers":{"command":"mkdir lcvista/React/app/RobotMonkeyButlers/helpers/","type":"shell_command","success_message":"DIR CREATED  : lcvista/React/app/RobotMonkeyButlers/helpers/","enabled":true,"id":"mkdir reactapp helpers","name":"mkdir reactapp helpers"},"Edit Scene":{"file_type":"jsx","target_file_name":"RobotMonkeyButlerEditScene","source_file_full_name_with_extension":"RobotMonkeyButlerEditScene.jsx","type":"file","source_file_path":"lcvista/react/app/RobotMonkeyButlers/containers/","target_file_path":"lcvista/react/app/RobotMonkeyButlers/containers/","enabled":true,"id":"Edit Scene","name":"Edit Scene"},"run migrations -- new table":{"command":"python manage.py migrate","type":"shell_command","success_message":"Database migration successful","enabled":true,"id":"run migrations -- new table","name":"run migrations -- new table"},"run migrations reports":{"command":"python manage.py migrate","type":"shell_command","success_message":"Reportconfig migration successful","enabled":true,"id":"run migrations reports","name":"run migrations reports"},"run migrations -- permissions":{"command":"python manage.py migrate","type":"shell_command","success_message":"Permissions migration successful","enabled":true,"id":"run migrations -- permissions","name":"run migrations -- permissions"},"run migrations -- report permissions":{"command":"python manage.py migrate","type":"shell_command","success_message":"Permissions migration successful","enabled":true,"id":"run migrations -- permissions","name":"run migrations -- permissions"},"update permission migration":{"file_type":"py","target_file_name":"(^_^)latestmigration","type":"file","replaces":{"class Migration(migrations.Migration):\\n":["from lcvista.permissions.models import (\\n","    REACT_PERMISSIONS,\\n",")\\n","\\n","\\n","def add_permission_roles(apps, schema_editor):\\n","    PermissionGroup = apps.get_model(\'permissions\', \'PermissionGroup\')\\n","    AuthGroup = apps.get_model(\'auth\', \'Group\')\\n","    Permission = apps.get_model(\'auth\', \'Permission\')\\n","    RobotMonkeyButler = apps.get_model(\'robotmonkeybutlers\', \'RobotMonkeyButler\')\\n","    ContentType = apps.get_model(\'contenttypes\', \'ContentType\')\\n","    # 1. Add permissions\\n","    #  A. Endpont permissions:\\n","    content_type = ContentType.objects.get_for_model(RobotMonkeyButler)\\n","    #   - add\\n","    robotmonkeybutler_add_permission, created = Permission.objects.get_or_create(\\n","        codename=\'add_robotmonkeybutler\', content_type=content_type\\n","    )\\n","    #   - change\\n","    robotmonkeybutler_change_permission, created = Permission.objects.get_or_create(\\n","        codename=\'change_robotmonkeybutler\', content_type=content_type\\n","    )\\n","    #   - delete\\n","    robotmonkeybutler_delete_permission, created = Permission.objects.get_or_create(\\n","        codename=\'delete_robotmonkeybutler\', content_type=content_type\\n","    )\\n","\\n","    # #  B. Add \'type\' permission if needed\\n","    # robotmonkeybutler_some_type_permission, created = Permission.objects.get_or_create(\\n","    #     codename=\'robotmonkeybutler_some_type\', content_type=content_type\\n","    # )\\n","\\n","    # \\"\\"\\"  If there were a second type it would go here.  We are not implementing a second \\"type\\"\\n","    # in the migration, but this is here for example: \\"\\"\\"\\n","    # robotmonkeybutler_other_type_permission, created = Permission.objects.get_or_create(\\n","    #     codename=\'robotmonkeybutler_other_type_permission\', content_type=content_type\\n","    # )\\n","\\n","    #  C. Add React permission\\n","    ct, created = ContentType.objects.get_or_create(model=\'\', app_label=\'react\')\\n","    robot_monkey_butlers_react_permission, created = Permission.objects.get_or_create(\\n","        codename=\'robot_monkey_butlers\', name=REACT_PERMISSIONS[\'robot_monkey_butlers\'], content_type=ct\\n","    )\\n","\\n","    # 2. Add / Update Auth Groups / Permission Groups\\n","    #  A. Admin Group\\n","    admin_group = AuthGroup.objects.get(\\n","        name=\'Default Administrator\',\\n","    )\\n","    admin_group.permissions.add(\\n","        # endpoint permissions\\n","        robotmonkeybutler_change_permission,\\n","        robotmonkeybutler_add_permission,\\n","        robotmonkeybutler_delete_permission,\\n","\\n","        # # type permission\\n","        # robotmonkeybutler_some_type_permission,\\n","\\n","        # react navigation permission\\n","        robot_monkey_butlers_react_permission,\\n","    )\\n","\\n","    #  NOTE:  We do not need to create the PermissionGroup for the Default Admin as it already\\n","    #  exists.  All we have to do is add the permissions to the AuthGroup as shown above\\n","\\n","    #  B. \'Type\' group  (if applicable)\\n","    #  NOTE: Since we do not have the concept of \'type\' with this, then we just\\n","    #  add a base role here\\n","    robotmonkeybutler_manage, created = AuthGroup.objects.get_or_create(\\n","        name=\'Robot Monkey Butlers\',\\n","    )\\n","    robotmonkeybutler_manage.permissions.set([\\n","        # endpoint permissions\\n","        robotmonkeybutler_change_permission,\\n","        robotmonkeybutler_add_permission,\\n","        robotmonkeybutler_delete_permission,\\n","\\n","        #  type permission\\n","        # robotmonkeybutler_some_type_permission,\\n","\\n","        # react navigation permission\\n","        robot_monkey_butlers_react_permission,\\n","    ])\\n","\\n","    #  After creating the new AuthGroup and adding the permissions above, we also need to\\n","    #  create a PermissionGroup which is basically just a wrapper around the AuthGroup which\\n","    #  contains a description\\n","    PermissionGroup.objects.get_or_create(\\n","        description=\'Manage Robot Monkey Butlers\',\\n","        group=robotmonkeybutler_manage,\\n","    )\\n","\\n","    #   C. \'Manager\' group -- If we were adding both Users and Program type\\n","    # permissions, then we would also add a \'manager\' group as follows.  Since\\n","    # we are only implementing one type in this migration, we will save the \'manager\'\\n","    # group for a future migration\\n","\\n","    # bulk_upload_manager = AuthGroup.objects.create(\\n","    #     name=\'Bulk Uploads Manager\',\\n","    # )\\n","    # reports_robot_monkey_butler_manage.permissions.set([\\n","    #     #endpoint permissions\\n","    #     robotmonkeybutler_change_permission,\\n","    #     robotmonkeybutler_add_permission,\\n","    #     robotmonkeybutler_delete_permission,\\n","\\n","    #     #ALL bulk upload type permission\\n","    #     robotmonkeybutler_users_type_permission,\\n","    #     robotmonkeybutler_programs_type_permission, #  *** Contains both \'type\'s\\n","\\n","    #     #react navigation permission\\n","    #     robot_monkey_butlers_credit_permission,\\n","    # ])\\n","\\n","    # PermissionGroup.objects.create(\\n","    # description=\'Bulk Uploads Manager\',\\n","    # group=robotmonkeybutler_manage,\\n","    # )\\n","\\n","\\n","def teardown_permission_roles(apps, schema_editor):\\n","    PermissionGroup = apps.get_model(\'permissions\', \'PermissionGroup\')\\n","    AuthGroup = apps.get_model(\'auth\', \'Group\')\\n","    Permission = apps.get_model(\'auth\', \'Permission\')\\n","    RobotMonkeyButler = apps.get_model(\'robotmonkeybutlers\', \'RobotMonkeyButler\')\\n","    ContentType = apps.get_model(\'contenttypes\', \'ContentType\')\\n","\\n","    ct, created = ContentType.objects.get_or_create(model=\'\', app_label=\'react\')\\n","\\n","    robotmonkeybutler_manage = AuthGroup.objects.get(\\n","        name=\'Robot Monkey Butlers\',\\n","    )\\n","\\n","    Permission.objects.filter(\\n","        codename=\'robot_monkey_butlers\', name=REACT_PERMISSIONS[\'robot_monkey_butlers\'], content_type=ct\\n","    ).delete()\\n","\\n","    content_type = ContentType.objects.get_for_model(RobotMonkeyButler)\\n","    Permission.objects.filter(\\n","        codename__in=[\\n","            \'add_robotmonkeybutler\',\\n","            \'change_robotmonkeybutler\',\\n","            \'delete_robotmonkeybutler\'\\n","        ], content_type=content_type\\n","    ).delete()\\n","\\n","    PermissionGroup.objects.filter(\\n","        group=robotmonkeybutler_manage,\\n","    ).delete()\\n","    robotmonkeybutler_manage.delete()\\n","\\n","\\n","class Migration(migrations.Migration): \\n","\\n"],"    operations = [\\n":["    operations = [ \\n","        migrations.RunPython(add_permission_roles, reverse_code=teardown_permission_roles),\\n","    ] \\n"]},"source_file_path":"(^_^)update","target_file_path":"lcvista/permissions/migrations/","enabled":true,"id":"update permission migration","name":"update permission migration"},"update report permission migration":{"file_type":"py","target_file_name":"(^_^)latestmigration","type":"file","replaces":{"class Migration(migrations.Migration):\\n":["from lcvista.permissions.models import (\\n","    REACT_PERMISSIONS,\\n",")\\n","from lcvista.reports.reports.robot_monkey_butler import RobotMonkeyButlerReport\\n","\\n","\\n","def add_permission_roles(apps, schema_editor):\\n","    PermissionGroup = apps.get_model(\'permissions\', \'PermissionGroup\')\\n","    AuthGroup = apps.get_model(\'auth\', \'Group\')\\n","    Permission = apps.get_model(\'auth\', \'Permission\')\\n","    ContentType = apps.get_model(\'contenttypes\', \'ContentType\')\\n","    ReportConfiguration = apps.get_model(\'reports\', \'ReportConfiguration\')\\n","    ScheduledReport = apps.get_model(\'scheduledreports\', \'ScheduledReport\')\\n","    content_type = ContentType.objects.get_for_model(ScheduledReport)\\n","    scheduledreport_add_permission = Permission.objects.get(\\n","        codename=\'add_scheduledreport\', content_type=content_type\\n","    )\\n","    scheduledreport_change_permission = Permission.objects.get(\\n","        codename=\'change_scheduledreport\', content_type=content_type\\n","    )\\n","    scheduledreport_delete_permission = Permission.objects.get(\\n","        codename=\'delete_scheduledreport\', content_type=content_type\\n","    )\\n","    content_type = ContentType.objects.get_for_model(ReportConfiguration)\\n","    reportconfiguration_add_permission = Permission.objects.get(\\n","        codename=\'add_reportconfiguration\', content_type=content_type\\n","    )\\n","    reportconfiguration_change_permission = Permission.objects.get(\\n","        codename=\'change_reportconfiguration\', content_type=content_type\\n","    )\\n","    reportconfiguration_delete_permission = Permission.objects.get(\\n","        codename=\'delete_reportconfiguration\', content_type=content_type\\n","    )\\n","    reportconfiguration_type_read_permission, created = Permission.objects.get_or_create(\\n","        codename=RobotMonkeyButlerReport.slug + \'_type_read_permission\', content_type=content_type\\n","    )\\n","    reportconfiguration_type_read_write_permission, created = Permission.objects.get_or_create(\\n","        codename=RobotMonkeyButlerReport.slug + \'_type_read_write_permission\', content_type=content_type\\n","    )\\n","    # \\"\\"\\"  If there were a second type it would go here.  We are not implementing a second \\"type\\"\\n","    # in the migration, but this is here for example: \\"\\"\\"\\n","    # robotmonkeybutler_other_type_permission, created = Permission.objects.get_or_create(\\n","    #     codename=\'robotmonkeybutler_other_type_permission\', content_type=content_type\\n","    # )\\n","\\n","    ct, created = ContentType.objects.get_or_create(model=\'\', app_label=\'react\')\\n","    react_reports_robot_monkey_butler_read_permission, created = Permission.objects.get_or_create(\\n","        codename=\'reports_robot_monkey_butler_read\', name=REACT_PERMISSIONS[\'reports_robot_monkey_butler_read\'], content_type=ct\\n","    )\\n","\\n","    ct, created = ContentType.objects.get_or_create(model=\'\', app_label=\'react\')\\n","    react_reports_robot_monkey_butler_read_write_permission, created = Permission.objects.get_or_create(\\n","        codename=\'reports_robot_monkey_butler_read_write\', name=REACT_PERMISSIONS[\'reports_robot_monkey_butler_read_write\'], content_type=ct\\n","    )\\n","\\n","    admin_group = AuthGroup.objects.get(\\n","        name=\'Default Administrator\',\\n","    )\\n","    admin_group.permissions.add(\\n","        # endpoint permissions\\n","        reportconfiguration_type_read_permission,\\n","        reportconfiguration_type_read_write_permission,\\n","        react_reports_robot_monkey_butler_read_permission,\\n","        react_reports_robot_monkey_butler_read_write_permission,\\n","    )\\n","\\n","    react_reports_permission = Permission.objects.get(\\n","        codename=\'reports\', name=REACT_PERMISSIONS[\'reports\'], content_type=ct\\n","    )\\n","    # READ, UPDATE, DELETE REPORTS\\n","    reports_robot_monkey_butler_manage = AuthGroup.objects.create(\\n","        name=\'Reports > Robot Monkey Butlers\',\\n","    )\\n","    reports_robot_monkey_butler_manage.permissions.set([\\n","        react_reports_permission,\\n","        react_reports_robot_monkey_butler_read_permission,\\n","        react_reports_robot_monkey_butler_read_write_permission,\\n","        scheduledreport_add_permission,\\n","        scheduledreport_change_permission,\\n","        scheduledreport_delete_permission,\\n","        reportconfiguration_add_permission,\\n","        reportconfiguration_change_permission,\\n","        reportconfiguration_delete_permission,\\n","        reportconfiguration_type_read_permission,\\n","        reportconfiguration_type_read_write_permission\\n","    ])\\n","    PermissionGroup.objects.create(\\n","        description=\'Access to create, update, and delete robot monkey butler reports.\',\\n","        group=reports_robot_monkey_butler_manage\\n","    )\\n","\\n","\\n","def teardown_permission_roles(apps, schema_editor):\\n","    AuthGroup = apps.get_model(\'auth\', \'Group\')\\n","    Permission = apps.get_model(\'auth\', \'Permission\')\\n","    ContentType = apps.get_model(\'contenttypes\', \'ContentType\')\\n","    ReportConfiguration = apps.get_model(\'reports\', \'ReportConfiguration\')\\n","    content_type = ContentType.objects.get_for_model(ReportConfiguration)\\n","    reportconfiguration_type_read_permission, created = Permission.objects.get_or_create(\\n","        codename=RobotMonkeyButlerReport.slug + \'_type_read_permission\', content_type=content_type\\n","    )\\n","    reportconfiguration_type_read_write_permission, created = Permission.objects.get_or_create(\\n","        codename=RobotMonkeyButlerReport.slug + \'_type_read_write_permission\', content_type=content_type\\n","    )\\n","    ct, created = ContentType.objects.get_or_create(model=\'\', app_label=\'react\')\\n","    # GET FRONT END REACT PERMISSIONS\\n","    react_reports_robot_monkey_butler_read_permission, created = Permission.objects.get_or_create(\\n","        codename=\'reports_robot_monkey_butler_read\',\\n","        name=REACT_PERMISSIONS[\'reports_robot_monkey_butler_read\'],\\n","        content_type=ct,\\n","    )\\n","    react_reports_robot_monkey_butler_read_write_permission, created = Permission.objects.get_or_create(\\n","        codename=\'reports_robot_monkey_butler_read_write\',\\n","        name=REACT_PERMISSIONS[\'reports_robot_monkey_butler_read_write\'],\\n","        )\\n","        content_type=ct,\\n","\\n","    # REMOVE FROM DEFAULT ADMIN\\n","    default_admin_auth_group = AuthGroup.objects.filter(\\n","        name=\'Default Administrator\',\\n","    ).first()\\n","    if default_admin_auth_group:\\n","        default_admin_auth_group.permissions.remove(\\n","            reportconfiguration_type_read_permission,\\n","            reportconfiguration_type_read_write_permission,\\n","            react_reports_robot_monkey_butler_read_permission,\\n","            react_reports_robot_monkey_butler_read_write_permission,\\n","        )\\n","\\n","    # REMOVE PERMISSIONS\\n","    reportconfiguration_type_read_permission.delete()\\n","    reportconfiguration_type_read_write_permission.delete()\\n","    react_reports_robot_monkey_butler_read_permission.delete()\\n","    react_reports_robot_monkey_butler_read_write_permission.delete()\\n","\\n","    reports_robot_monkey_butler_read = AuthGroup.objects.filter(\\n","        name=\'Reports > Robot Monkey Butlers > saved report\',\\n","    ).first()\\n","    if reports_robot_monkey_butler_read:\\n","        reports_robot_monkey_butler_read.delete()\\n","\\n","    reports_robot_monkey_butler_manage = AuthGroup.objects.filter(\\n","        name=\'Reports > Robot Monkey Butlers\',\\n","    ).first()\\n","    if reports_robot_monkey_butler_manage:\\n","        reports_robot_monkey_butler_manage.delete()\\n","\\n","\\n","class Migration(migrations.Migration): \\n","\\n"],"    operations = [\\n":["    operations = [ \\n","        migrations.RunPython(add_permission_roles, reverse_code=teardown_permission_roles),\\n","    ] \\n"]},"source_file_path":"(^_^)update","target_file_path":"lcvista/permissions/migrations/","enabled":true,"id":"update permission migration","name":"update permission migration"},"mkdir startapp":{"command":"mkdir lcvista/robotmonkeybutlers","type":"shell_command","success_message":"DIR CREATED  : lcvista/robotmonkeybutlers/","enabled":true,"id":"mkdir startapp","name":"mkdir startapp"},"mkdir reactapp base":{"command":"mkdir lcvista/React/app/RobotMonkeyButlers/","type":"shell_command","success_message":"DIR CREATED  : lcvista/React/app/RobotMonkeyButlers/","enabled":true,"id":"mkdir reactapp base","name":"mkdir reactapp base"},"mkdir reactapp components":{"command":"mkdir lcvista/React/app/RobotMonkeyButlers/components/","type":"shell_command","success_message":"DIR CREATED  : lcvista/React/app/RobotMonkeyButlers/components/","enabled":true,"id":"mkdir reactapp components","name":"mkdir reactapp components"},"makemigrations":{"migration_filename":"0001_initial.py","command":"python manage.py makemigrations","type":"new_migration","success_message":"Migration successfully created","enabled":true,"name":"makemigrations","path_to_migrations":"lcvista/robotmonkeybutlers/migrations/","id":"makemigrations","rename":null},"register app in base.py":{"file_type":"py","target_file_name":"base","type":"file","inserts":{"newapp":["    \'lcvista.robotmonkeybutlers\',\\n"]},"source_file_path":"(^_^)update","target_file_path":"lcvista/settings/","enabled":true,"id":"register app in base.py","name":"register app in base.py"},"add reactpermission type":{"file_type":"py","target_file_name":"models","type":"file","inserts":{"reactpermission":["    \'robot_monkey_butlers\': \'Manage Robot Monkey Butlers\',\\n"]},"source_file_path":"(^_^)update","target_file_path":"lcvista/permissions/","enabled":true,"id":"add reactpermission type","name":"add reactpermission type"},"add react report permission type":{"file_type":"py","target_file_name":"models","type":"file","inserts":{"reportreactpermission":["\'reports_robot_monkey_butler_read\': \'React Reports Robot Monkey Butler Read\',\\n","\'reports_robot_monkey_butler_read_write\': \'React Reports Robot Monkey Butler Read/Write\',\\n"]},"source_file_path":"(^_^)update","target_file_path":"lcvista/permissions/","enabled":true,"id":"add react report permission type","name":"add react report permission type"},"add new report type to reportconfig":{"file_type":"py","target_file_name":"models","type":"file","inserts":{"reportimport":["from lcvista.reports.reports.robot_monkey_butler import RobotMonkeyButlerReport\\n"],"reporttype":["        RobotMonkeyButlerReport,\\n"]},"source_file_path":"(^_^)update","target_file_path":"lcvista/reports/","enabled":true,"id":"add new report type to reportconfig","name":"add new report type to reportconfig"},"Build ListFilters":{"file_type":"jsx","target_file_name":"RobotMonkeyButlersListFilters","source_file_full_name_with_extension":"RobotMonkeyButlersListFilters.jsx","type":"file","source_file_path":"lcvista/react/app/RobotMonkeyButlers/components/","target_file_path":"lcvista/react/app/RobotMonkeyButlers/components/","enabled":true,"id":"Build ListFilters","name":"Build ListFilters"},"Create Model":{"file_type":"py","target_file_name":"models","source_file_full_name_with_extension":"models.py","type":"file","source_file_path":"lcvista/robotmonkeybutlers/","target_file_path":"lcvista/robotmonkeybutlers/","enabled":true,"id":"Create Model","name":"Create Model"},"create pages.py":{"file_type":"py","target_file_name":"pages","source_file_full_name_with_extension":"pages.py","type":"file","source_file_path":"lcvista/tests/integration/robotmonkeybutlers/","target_file_path":"lcvista/tests/integration/robotmonkeybutlers/","enabled":true,"id":"create pages.py","name":"create pages.py"},"Build List Scene":{"file_type":"jsx","target_file_name":"RobotMonkeyButlersListScene","source_file_full_name_with_extension":"RobotMonkeyButlersListScene.jsx","type":"file","source_file_path":"lcvista/react/app/RobotMonkeyButlers/containers/","target_file_path":"lcvista/react/app/RobotMonkeyButlers/containers/","enabled":true,"id":"Build List Scene","name":"Build List Scene"},"Build ListContainer":{"file_type":"jsx","target_file_name":"RobotMonkeyButlersListContainer","source_file_full_name_with_extension":"RobotMonkeyButlersListContainer.jsx","type":"file","source_file_path":"lcvista/react/app/RobotMonkeyButlers/containers/","target_file_path":"lcvista/react/app/RobotMonkeyButlers/containers/","enabled":true,"id":"Build ListContainer","name":"Build ListContainer"}},"go_list":["Front End","Back End","Permissions","Reporting","Testing"],"env":{"sections":{},"replaces":{},"paths":{"source_base_path":"/Users/lcvista/dev/rmb/source_files/","target_base_path":"/Users/lcvista/dev/lcv/"},"inserts":{}},"processes":{"Testing":{"todo_list":["Selenium Testing","add endpoint tests"],"enabled":true,"id":"Testing","name":"Testing"},"Reporting":{"todo_list":["add columns","add filters","add report file","add new report type to reportconfig","makemigrations","run migrations reports","Report Permissions","add report tests"],"enabled":true,"id":"Reporting","name":"Reporting"},"Selenium Testing":{"todo_list":["mkdir integration tests","create pages.py"],"enabled":true,"id":"Selenium Testing","name":"Selenium Testing"},"List Headers":{"todo_list":["Build ListHeader"],"enabled":true,"id":"List Headers","name":"List Headers"},"Back End":{"todo_list":["Manage startapp","Create Model","makemigrations","run migrations -- new table","Create API endpoint"],"enabled":true,"id":"Back End","name":"Back End"},"ListFilters":{"todo_list":["Build ListFilters","Build ListFiltersContainer"],"enabled":true,"id":"ListFilters","name":"ListFilters"},"List Table":{"todo_list":["Build ListTableRow","Build ListContainer"],"enabled":true,"id":"List Table","name":"List Table"},"Edit Page":{"todo_list":["Edit Form","Edit Form Container","Edit Scene"],"enabled":true,"id":"Edit Page","name":"Edit Page"},"Start React App":{"todo_list":["mkdir reactapp base","mkdir reactapp components","mkdir reactapp containers","mkdir reactapp helpers"],"enabled":true,"id":"Start React App","name":"Start React App"},"Manage startapp":{"todo_list":["mkdir startapp","manage startapp","register app in base.py"],"enabled":true,"id":"Manage startapp","name":"Manage startapp"},"List Page":{"todo_list":["Build List Scene","List Table","List Headers","ListFilters","Add React routes","Add to Sidebar"],"enabled":true,"id":"List Page","name":"List Page"},"Permissions":{"todo_list":["add reactpermission type","makemigrations permissions --empty","update permission migration","run migrations -- permissions"],"enabled":true,"id":"Permissions","name":"Permissions"},"Report Permissions":{"todo_list":["add react report permission type","makemigrations permissions --empty","update report permission migration","run migrations -- report permissions"],"enabled":true,"id":"Permissions","name":"Permissions"},"Create API endpoint":{"todo_list":["create viewset and serializer","register url with router"],"enabled":true,"id":"Create API endpoint","name":"Create API endpoint"},"Front End":{"todo_list":["Start React App","Edit Page","List Page"],"enabled":true,"id":"Front End","name":"Front End"}}}')},14:function(e,t,n){e.exports=n(24)},19:function(e,t,n){},20:function(e,t,n){},24:function(e,t,n){"use strict";n.r(t);var o=n(0),r=n.n(o),s=n(10),a=n.n(s),i=(n(19),n(20),n(6)),p=n(7),l=n(13),_=n(1),m=n(2),c=n(4),d=n(3),u=n(5),b=function(e){function t(){return Object(_.a)(this,t),Object(c.a)(this,Object(d.a)(t).apply(this,arguments))}return Object(u.a)(t,e),Object(m.a)(t,[{key:"render",value:function(){var e=this.props.parentEnabled&&this.props.enabled?"task":"task dim";return r.a.createElement("div",{className:e},r.a.createElement("input",{type:"checkbox",name:"".concat(this.props.name,"::enabled"),onClick:this.props.handleChange,checked:this.props.enabled,value:this.props.enabled}),r.a.createElement("code",null,this.props.id))}}]),t}(o.Component),y=n(8),g=n(11),f=n.n(g),h={open:{background:"#ecf0f1"}},k=["height"],R=function(e){function t(){var e,n;Object(_.a)(this,t);for(var o=arguments.length,r=new Array(o),s=0;s<o;s++)r[s]=arguments[s];return(n=Object(c.a)(this,(e=Object(d.a)(t)).call.apply(e,[this].concat(r)))).state={expanded:!1,showProps:!1},n.handleExpand=function(){n.setState((function(e){return{expanded:!e.expanded}}))},n}return Object(u.a)(t,e),Object(m.a)(t,[{key:"render",value:function(){var e=this.state.expanded,t=e?r.a.createElement(y.b,null):r.a.createElement(y.a,null),n=e?"process":"process-expanded";(!this.props.parentEnabled||!this.props.enabled)&&(n+=" dim");return r.a.createElement("div",{className:n,key:this.props.id},r.a.createElement(o.Fragment,null,r.a.createElement("div",{className:"left-side-process"},r.a.createElement("div",{className:"process-label"},r.a.createElement("input",{type:"checkbox",name:"".concat(this.props.name,"::").concat("enabled"),onClick:this.props.handleChange,checked:this.props.enabled,value:this.props.enabled}),r.a.createElement("code",null,this.props.id),r.a.createElement("button",{className:"caret",onClick:this.handleExpand},t))),r.a.createElement(f.a,{open:e,duration:100,styles:h,transitions:k},r.a.createElement("div",{className:"right-side-process"},r.a.createElement(v,{todoList:this.props.todo_list,tasks:this.props.tasks,processes:this.props.processes,handleChange:this.props.handleChange,parentEnabled:this.props.parentEnabled&&this.props.enabled})))))}}]),t}(o.Component),v=function(e){function t(){var e,n;Object(_.a)(this,t);for(var o=arguments.length,s=new Array(o),a=0;a<o;a++)s[a]=arguments[a];return(n=Object(c.a)(this,(e=Object(d.a)(t)).call.apply(e,[this].concat(s)))).renderItem=function(e){if(e in n.props.tasks){var t=n.props.tasks[e];return r.a.createElement(b,Object.assign({},n.props,t))}if(e in n.props.processes){var o=n.props.processes[e];return r.a.createElement(R,Object.assign({},n.props,o))}return r.a.createElement("div",null,"Unrecognized ID in todo list! ",r.a.createElement("code",null,e))},n}return Object(u.a)(t,e),Object(m.a)(t,[{key:"render",value:function(){var e=this,t="todo-list";return this.props.parentEnabled||(t+=" dim"),r.a.createElement("div",{className:t},this.props.todoList.map((function(t,n){return e.renderItem(t)})))}}]),t}(o.Component),E=n(12),B=function(e){function t(){var e,n;Object(_.a)(this,t);for(var o=arguments.length,r=new Array(o),s=0;s<o;s++)r[s]=arguments[s];return(n=Object(c.a)(this,(e=Object(d.a)(t)).call.apply(e,[this].concat(r)))).state={processes:{},tasks:{},env:{},go_list:[]},n.download=function(e,t,n){var o=new Blob([e],{type:n}),r=document.createElement("a"),s=URL.createObjectURL(o);r.href=s,r.download=t,document.body.appendChild(r),r.click(),setTimeout((function(){document.body.removeChild(r),window.URL.revokeObjectURL(s)}),0)},n.save=function(){n.download(JSON.stringify(n.state),"config.json","text/plain")},n.isProcess=function(e){return e in n.state.processes},n.handleChange=function(e){var t=e.target.name.split("::"),o=Object(l.a)(t,2),r=o[0],s=o[1];console.log(r,s);var a=n.isProcess(r)?"processes":"tasks";n.setState((function(e){return Object(i.a)({},a,Object(p.a)({},e[a],Object(i.a)({},r,Object(p.a)({},e[a][r],{enabled:!e[a][r][s]}))))}))},n.handleNameChange=function(e){n.setState({feature:e.target.value})},n}return Object(u.a)(t,e),Object(m.a)(t,[{key:"componentDidMount",value:function(){this.setState(E)}},{key:"render",value:function(){var e=this.state,t=e.processes,n=e.tasks,o=e.env,s=e.go_list;return console.log(this.state),r.a.createElement("div",{className:"main"},r.a.createElement("div",{className:"center-container",style:{marginTop:"1rem",marginBottom:"1rem"}},"Project Name: ",r.a.createElement("input",{onChange:this.handleNameChange,className:"textbox",type:"text",name:"feature",label:"Project Name"})),r.a.createElement(v,{processes:t,tasks:n,env:o,todoList:s,handleChange:this.handleChange,parentEnabled:!0}),r.a.createElement("div",{className:"center-container"},r.a.createElement("button",{onClick:this.save,className:"save-button"},"Save")))}}]),t}(o.Component);var M=function(){return r.a.createElement("div",{className:"app"},r.a.createElement("header",null,r.a.createElement("code",{style:{fontSize:"small"}},"robot.monkey.butler")),r.a.createElement(B,null))};Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));a.a.render(r.a.createElement(M,null),document.getElementById("root")),"serviceWorker"in navigator&&navigator.serviceWorker.ready.then((function(e){e.unregister()}))}},[[14,1,2]]]);
//# sourceMappingURL=main.0a9035fa.chunk.js.map